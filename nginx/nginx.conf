events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name nlesmann.site www.nlesmann.site;

        # Redirect HTTP traffic to HTTPS
        return 307 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name nlesmann.site www.nlesmann.site;

        # SSL configuration
        ssl_certificate /etc/letsencrypt/live/nlesmann.site/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/nlesmann.site/privkey.pem;
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # Serve React app from the root folder
        root /usr/share/nginx/html;
        index index.html;

        # Try to serve the correct files for routes, falling back to index.html
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy FastAPI requests to the backend
        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
        }
    }
}